" vim:fileencoding=utf-8:foldmethod=marker

" Settings
set encoding=UTF-8

set viminfo='32,<256,:4096,/256,%
set viminfofile=~/.local/state/vim/viminfo
set sessionoptions=buffers,folds,help,options,tabpages,winsize,terminal,sesdir
set backupdir=./.vimbackup,~/.local/share/vim/backup,.,~/tmp,~/ " ??
set undodir=~/.local/share/vim/undo
set undofile
set history=4096
set noexrc
set secure

" ui options
set ruler
set number
set relativenumber
set cursorline
set shortmess=atToO
set wildmenu
set wildoptions=pum
set pumheight=32
set showcmd
set laststatus=2

set conceallevel=2
set foldenable
set fillchars=vert:\|,fold:-,eob:\ ,lastline:@

" Search Options {{{
set ignorecase
set smartcase
set hlsearch
set incsearch
set wrapscan
" }}}

" Indentation Options {{{
set cindent
set autoindent
set noexpandtab
set smarttab
set tabstop=4
set shiftwidth=4
set softtabstop=4
" }}}

" Behavior
" if exists("+autochdir") | set autochdir | endif
set guioptions=cdiM
set autoread
set noautoshelldir
set noautowrite
set noautowriteall

set backspace=indent,eol,start

" Options without 'set'
syntax on
nohlsearch

" Colorscheme
set termguicolors
set background=dark

" Load plugins
runtime ftplugin/man.vim
let g:no_man_maps = 1
let g:ft_man_open_mode = 'tab'

packadd helptoc

runtime maps.vim
runtime plugins.vim

" C syntax options {{{
let c_no_curly_error = 1
let c_space_errors = 1
let c_comment_strings = 1
let c_functions = 1

function CSyntaxFunctionToggle()
	if exists("g:c_functions")
		unlet g:c_functions
	else
		let g:c_functions = 1
	endif

	syn on
endfunc

nnoremap <Leader>.cf :call CSyntaxFunctionToggle()<CR>
" }}}

au BufNewFile,BufRead *.sp,*.cir,*.spice setf spice

set background=dark
colorscheme sorbet

